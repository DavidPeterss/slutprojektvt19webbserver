c
liked
c
exit
params["like"]
liked_posts[0]["UploadId"]
liked_posts
liked
c
liked
exit
liked_posts
c
  db.execute("INSERT INTO likesdislikes(UploadId, UserId) VALUES(?, ?)", params["dislike"], session[:userId])
  db.execute("INSERT INTO likesdislikes(UploadId, UserId) VALUES(?, ?)", params["dislike"], session[:userId
has_liked
params["dislike"]
c
has_liked
like_counter
c
has_liked
like_counter
c
has_liked
like_counter
c
like_counter
c
db.execute("INSERT INTO likesdislikes(Likes) VALUES(?)", like_counter)
like_counter +=1
like_counter = 0
like_counter += 1
 db.execute("INSERT INTO likesdislikes(Likes) VALUES(?)", like_counter+1)
db.execute("INSERT INTO likesdislikes(Likes) VALUES(?)", like_counter+1
like_counter
c
dislike_counter
c
like
like_counter
c
like_counter
params
session
c
session
c
session[:userId]
c
db.execute("SELECT Post FROM bloggposts")
db.execute("SELECT Header FROM bloggposts")
c
params["like"]
session
session[
c
db.execute("likesdislikes(UserId)")
db.execute("likesdislikes.UserId")
likesdislikes.UserId
        db.execute("INSERT INTO likesdislikes(UserId) VALUES(?)", session[:userId])
session
c
db.execute("SELECT PostId FROM bloggposts INNER JOIN likesdislikes ON bloggposts.PostId = likesdislikes.UploadId")
db.execute("INSERT INTO likesdislikes(UserId) VALUES(?)", session[:userId])
db.execute("SELECT PostId FROM bloggposts INNER JOIN likesdislikes ON bloggposts.PostId = likesdislikes.UploadId")
params["file"]
session
c
db.execute("INSERT INTO likesdislikes(PostId) VALUES(?)", 2)
db.execute("INSERT INTO likes dislikes(PostId) VALUES(?)", 2)
id
session[:userId]
db.execute("INSERT INTO likesdislikes(UserId) VALUES(?)", 3)
db.execute("INSERT INTO likesdislikes(UserId, PostId) VALUES(?, ?)", session[:userId], id)
id
c
params["dislike"]
params["like"]
c
db.execute(SELECT PostId FROM likesdislikes)
PostId
params
c
db.execute("insert into bloggposts(Likes) values(1)")
db.execute("insert into bloggposts(Likes) values(1) where Id = 19")
c
params["like"]
c
params["like"]
c
params["like"]
c
params["like"]
c
params["dislike"]
params["like"]
c
params["dislike"]
c
postid
posts['Id']
params["like"]
c
session[:postId]
c
params
session[:postId]
session
like_counter
c
like_counter
c
like_counter
c
new_name
img
c
new_name
img["tempfile"]
c
FileUtils.copy(img["tempfile"], "./public/img/#{new_name}.jpg")
new_name = SecureRandom.uuid
FileUtils.copy(img["tempfile"], "./public/img/grill.jpg")
img["tempfile"]
require 'fileutils'
img
params
